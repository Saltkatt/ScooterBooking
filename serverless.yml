# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: bookings-api

custom:
  bookingsTableName: 'bookings-${self:provider.stage}'

provider:
  name: aws
  runtime: java8
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["BookingsDynamoDBTable", "Arn" ] }
        - Fn::Join:
              - "/"
              -
                - { "Fn::GetAtt": ["BookingsDynamoDBTable", "Arn" ] }
                - "index/*"
  environment:
    BOOKINGS_TABLE_NAME: ${self:custom.bookingsTableName}

package:
  artifact: 'target/${self:service}-${self:provider.stage}.jar'

functions:
  listBookings:
    handler: ListBookingHandler
    events:
      - http:
          path: /bookings
          method: get
  listBookingsByUser:
    handler: ListBookingsByUserHandler
    events:
      - http:
          path: /bookings-by-user
          method: get
  getBooking:
    handler: GetBookingHandler
    events:
      - http:
          path: /bookings/{id}
          method: get
  createBooking:
    handler: CreateBookingHandler
    events:
      - http:
          path: /bookings
          method: post
  deleteBooking:
    handler: DeleteBookingHandler
    events:
      - http:
          path: /bookings/{id}
          method: delete

resources:
  Resources:
    BookingsDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.bookingsTableName}
        AttributeDefinitions:
          - AttributeName: bookingId
            AttributeType: S
          - AttributeName: startTime
            AttributeType: S
          - AttributeName: endTime
            AttributeType: S
          - AttributeName: userId
            AttributeType: S

        KeySchema:
          - AttributeName: bookingId
            KeyType: HASH

        GlobalSecondaryIndexes:
          - IndexName: timeIndex
            KeySchema:
              - AttributeName: startTime
                KeyType: HASH
              - AttributeName: endTime
                KeyType: RANGE
            Projection:
              ProjectionType: KEYS_ONLY
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

          - IndexName: userIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH

            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
