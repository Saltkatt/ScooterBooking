AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: 'SAM template for Serverless framework service: '
Resources:
  BookingsDynamoDBTable:
    Properties:
      AttributeDefinitions:
        - AttributeName: bookingId
          AttributeType: S
        - AttributeName: startTime
          AttributeType: S
        - AttributeName: endTime
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: bookingId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: timeIndex
          KeySchema:
            - AttributeName: startTime
              KeyType: HASH
            - AttributeName: endTime
              KeyType: RANGE
          Projection:
            ProjectionType: KEYS_ONLY
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
        - IndexName: userIndex
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  BookingsApiNullListBookings:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: com.wirelessiths.ListBookingHandler
      Runtime: java8
      CodeUri: /home/adam/IdeaProjects/ScooterBooking/.serverless/bookings-api.zip
      MemorySize: 128
      Timeout: 3
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:Query'
                - 'dynamodb:Scan'
                - 'dynamodb:GetItem'
                - 'dynamodb:PutItem'
                - 'dynamodb:UpdateItem'
                - 'dynamodb:DeleteItem'
              Resource:
                - 'Fn::GetAtt':
                    - BookingsDynamoDBTable
                    - Arn
                - 'Fn::Join':
                    - /
                    - - 'Fn::GetAtt':
                          - BookingsDynamoDBTable
                          - Arn
                      - index/*
      Environment:
        Variables: {}
      Events:
        Event1:
          Type: Api
          Properties:
            Path: /bookings
            Method: get
            RestApiId:
              Ref: BookingsApi
  BookingsApi:
    Type: 'AWS::Serverless::Api'
    Properties:
      StageName: prod
      DefinitionBody:
        swagger: '2.0'
        info:
          title:
            Ref: 'AWS::StackName'
        paths:
          /bookings:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  'Fn::Sub': >-
                    arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BookingsApiNullListBookings.Arn}/invocations
              responses: {}
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  'Fn::Sub': >-
                    arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BookingsApiNullCreateBooking.Arn}/invocations
              responses: {}
          /bookings-by-user:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  'Fn::Sub': >-
                    arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BookingsApiNullListBookingsByUser.Arn}/invocations
              responses: {}
          '/bookings/{id}':
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  'Fn::Sub': >-
                    arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BookingsApiNullGetBooking.Arn}/invocations
              responses: {}
            delete:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  'Fn::Sub': >-
                    arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BookingsApiNullDeleteBooking.Arn}/invocations
              responses: {}
  BookingsApiNullListBookingsLambdaPermission:
    Type: 'AWS::Lambda::Permission'
    DependsOn:
      - BookingsApiNullListBookings
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        Ref: BookingsApiNullListBookings
      Principal: apigateway.amazonaws.com
  BookingsApiNullListBookingsByUser:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: com.wirelessiths.ListBookingsByUserHandler
      Runtime: java8
      CodeUri: /home/adam/IdeaProjects/ScooterBooking/.serverless/bookings-api.zip
      MemorySize: 128
      Timeout: 3
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:Query'
                - 'dynamodb:Scan'
                - 'dynamodb:GetItem'
                - 'dynamodb:PutItem'
                - 'dynamodb:UpdateItem'
                - 'dynamodb:DeleteItem'
              Resource:
                - 'Fn::GetAtt':
                    - BookingsDynamoDBTable
                    - Arn
                - 'Fn::Join':
                    - /
                    - - 'Fn::GetAtt':
                          - BookingsDynamoDBTable
                          - Arn
                      - index/*
      Environment:
        Variables: {}
      Events:
        Event1:
          Type: Api
          Properties:
            Path: /bookings-by-user
            Method: get
            RestApiId:
              Ref: BookingsApi
  BookingsApiNullListBookingsByUserLambdaPermission:
    Type: 'AWS::Lambda::Permission'
    DependsOn:
      - BookingsApiNullListBookingsByUser
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        Ref: BookingsApiNullListBookingsByUser
      Principal: apigateway.amazonaws.com
  BookingsApiNullGetBooking:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: com.wirelessiths.GetBookingHandler
      Runtime: java8
      CodeUri: /home/adam/IdeaProjects/ScooterBooking/.serverless/bookings-api.zip
      MemorySize: 128
      Timeout: 3
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:Query'
                - 'dynamodb:Scan'
                - 'dynamodb:GetItem'
                - 'dynamodb:PutItem'
                - 'dynamodb:UpdateItem'
                - 'dynamodb:DeleteItem'
              Resource:
                - 'Fn::GetAtt':
                    - BookingsDynamoDBTable
                    - Arn
                - 'Fn::Join':
                    - /
                    - - 'Fn::GetAtt':
                          - BookingsDynamoDBTable
                          - Arn
                      - index/*
      Environment:
        Variables: {}
      Events:
        Event1:
          Type: Api
          Properties:
            Path: '/bookings/{id}'
            Method: get
            RestApiId:
              Ref: BookingsApi
  BookingsApiNullGetBookingLambdaPermission:
    Type: 'AWS::Lambda::Permission'
    DependsOn:
      - BookingsApiNullGetBooking
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        Ref: BookingsApiNullGetBooking
      Principal: apigateway.amazonaws.com
  BookingsApiNullCreateBooking:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: com.wirelessiths.CreateBookingHandler
      Runtime: java8
      CodeUri: /home/adam/IdeaProjects/ScooterBooking/.serverless/bookings-api.zip
      MemorySize: 128
      Timeout: 3
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:Query'
                - 'dynamodb:Scan'
                - 'dynamodb:GetItem'
                - 'dynamodb:PutItem'
                - 'dynamodb:UpdateItem'
                - 'dynamodb:DeleteItem'
              Resource:
                - 'Fn::GetAtt':
                    - BookingsDynamoDBTable
                    - Arn
                - 'Fn::Join':
                    - /
                    - - 'Fn::GetAtt':
                          - BookingsDynamoDBTable
                          - Arn
                      - index/*
      Environment:
        Variables: {}
      Events:
        Event1:
          Type: Api
          Properties:
            Path: /bookings
            Method: post
            RestApiId:
              Ref: BookingsApi
  BookingsApiNullCreateBookingLambdaPermission:
    Type: 'AWS::Lambda::Permission'
    DependsOn:
      - BookingsApiNullCreateBooking
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        Ref: BookingsApiNullCreateBooking
      Principal: apigateway.amazonaws.com
  BookingsApiNullDeleteBooking:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: com.wirelessiths.DeleteBookingHandler
      Runtime: java8
      CodeUri: /home/adam/IdeaProjects/ScooterBooking/.serverless/bookings-api.zip
      MemorySize: 128
      Timeout: 3
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:Query'
                - 'dynamodb:Scan'
                - 'dynamodb:GetItem'
                - 'dynamodb:PutItem'
                - 'dynamodb:UpdateItem'
                - 'dynamodb:DeleteItem'
              Resource:
                - 'Fn::GetAtt':
                    - BookingsDynamoDBTable
                    - Arn
                - 'Fn::Join':
                    - /
                    - - 'Fn::GetAtt':
                          - BookingsDynamoDBTable
                          - Arn
                      - index/*
      Environment:
        Variables: {}
      Events:
        Event1:
          Type: Api
          Properties:
            Path: '/bookings/{id}'
            Method: delete
            RestApiId:
              Ref: BookingsApi
  BookingsApiNullDeleteBookingLambdaPermission:
    Type: 'AWS::Lambda::Permission'
    DependsOn:
      - BookingsApiNullDeleteBooking
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        Ref: BookingsApiNullDeleteBooking
      Principal: apigateway.amazonaws.com
